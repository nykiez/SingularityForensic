<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:metros="http://metro.mahapps.com/winfx/xaml/controls" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:Singularity.UI.Themes">
    <!--//xmlns:Converters="clr-namespace:MahApps.Metro.Converters"-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.TextBlock.xaml" />
        <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Themes/Thumb.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="{x:Type metros:MetroWindow}" >
        <Setter Property="WindowTitleBrush" Value="{DynamicResource Window.TitleBrush}"/>
        <Setter Property="NonActiveWindowTitleBrush" Value="{DynamicResource Window.NonActiveTitleBrush}"/>
        <Setter Property="Background" Value="{DynamicResource Window.Background}"/>
        <Setter Property="MinWidth" Value="800" />
        <Setter Property="MinHeight" Value="540" />
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TitlebarHeight" Value="38"/>
    </Style>
    <Style TargetType="{x:Type metros:MetroWindow}" x:Key="DefaultMWindow" BasedOn="{StaticResource {x:Type metros:MetroWindow}}" />

    <ControlTemplate x:Key="MsgWindowTemplateKey" TargetType="{x:Type metros:MetroWindow}">
        <Grid>
            <AdornerDecorator>
                <Grid >
                    <Grid.ColumnDefinitions>
                        <!--  icon  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  left window commands  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  title  -->
                        <ColumnDefinition Width="*" />
                        <!--  right window commands  -->
                        <ColumnDefinition Width="Auto" />
                        <!--  min,max,close buttons  -->
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>

                    <Border x:Name="PART_WindowTitleBackground"
                               Grid.Column="0"
                               Grid.ColumnSpan="5"
                               Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                               Background="{TemplateBinding WindowTitleBrush}"
                               Focusable="False"
                               UseLayoutRounding="True"
                                CornerRadius="10,10,0,0"
                               Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  icon  -->
                    <ContentControl x:Name="PART_Icon"
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    MinWidth="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    HorizontalContentAlignment="Stretch"
                                    VerticalContentAlignment="Stretch"
                                    Panel.ZIndex="1"
                                    Content="{TemplateBinding Icon}"
                                    ContentTemplate="{TemplateBinding IconTemplate}"
                                    Focusable="False"
                                    Visibility="{TemplateBinding ShowIconOnTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the left window commands  -->
                    <ContentPresenter x:Name="PART_LeftWindowCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="1"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding LeftWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <metros:MetroThumb x:Name="PART_WindowTitleThumb"
                                         Grid.Row="0"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="5"
                                         Style="{StaticResource WindowTitleThumbStyle}" />
                    <!--  the title bar  -->
                    <metros:MetroThumbContentControl x:Name="PART_TitleBar"
                                                       Grid.Row="0"
                                                      Foreground="{TemplateBinding Foreground}"
                                                       Grid.Column="2"
                                                       ContentCharacterCasing="{TemplateBinding TitleCharacterCasing}"
                                                       Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                                       HorizontalAlignment="{TemplateBinding TitleAlignment}"
                                                       HorizontalContentAlignment="Stretch"
                                                       VerticalContentAlignment="Stretch"
                                                       Content="{TemplateBinding Title}"
                                                       ContentTemplate="{TemplateBinding TitleTemplate}"
                                                       Focusable="False"
                                                       Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}">

                    </metros:MetroThumbContentControl>

                    <!--  the right window commands  -->
                    <ContentPresenter x:Name="PART_RightWindowCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="3"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding RightWindowCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      Visibility="{TemplateBinding ShowTitleBar, Converter={StaticResource BooleanToVisibilityConverter}}" />

                    <!--  the window button commands  -->
                    <ContentPresenter x:Name="PART_WindowButtonCommands"
                                      Grid.Row="0"
                                      Grid.RowSpan="2"
                                      Grid.Column="4"
                                      Height="{Binding TitlebarHeight, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      VerticalAlignment="Top"
                                      Panel.ZIndex="1"
                                      Content="{Binding WindowButtonCommands, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                      Focusable="False"
                                      UseLayoutRounding="True" />

                    <!--  the main window content  -->
                    <Border  Grid.Row="1" Background="{TemplateBinding Background}"
                        Grid.Column="0"
                        Grid.ColumnSpan="5">
                        <metros:MetroContentControl x:Name="PART_Content"
                                                  FocusVisualStyle="{x:Null}"
                                                  IsTabStop="False"
                                                  OnlyLoadTransition="True"
                                                  TransitionsEnabled="{TemplateBinding WindowTransitionsEnabled}"
                                                  UseLayoutRounding="True">
                            <ContentPresenter />
                        </metros:MetroContentControl>
                    </Border>



                    <!--  disables the main content when a modal flyout is shown  -->
                    <Rectangle Name="PART_FlyoutModal"
                               Grid.Row="0"
                               Grid.RowSpan="2"
                               Grid.Column="0"
                               Grid.ColumnSpan="5"
                               Fill="{DynamicResource BlackColorBrush}"
                               Opacity="0.5"
                               Visibility="Hidden" />
                    <metros:MetroThumb x:Name="PART_FlyoutModalDragMoveThumb"
                                         Grid.Row="0"
                                         Grid.Column="0"
                                         Grid.ColumnSpan="5"
                                         Style="{StaticResource WindowTitleThumbStyle}"
                                         Visibility="{Binding ElementName=PART_FlyoutModal, Path=Visibility, Mode=OneWay}" />

                    <!--  flyouts  -->
                    <ContentControl Grid.Row="0"
                                    Grid.RowSpan="2"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="5"
                                    VerticalAlignment="Stretch"
                                    Panel.ZIndex="2"
                                    Content="{Binding Flyouts, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}"
                                    Focusable="False"
                                    KeyboardNavigation.TabNavigation="None" />

                    <!--  inactive dialog container  -->
                    <Grid x:Name="PART_MetroInactiveDialogsContainer"
                          Grid.Row="0"
                          Grid.RowSpan="2"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Panel.ZIndex="3"
                          FocusVisualStyle="{x:Null}" />

                    <!--  overlay effect container  -->
                    <Grid x:Name="PART_OverlayBox"
                          Grid.Row="0"
                          Grid.RowSpan="2"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Panel.ZIndex="4"
                          Background="{TemplateBinding OverlayBrush}"
                          Opacity="0"
                          FocusVisualStyle="{x:Null}"
                          Focusable="False"
                          Visibility="Hidden" />

                    <!--  active dialog container  -->
                    <Grid x:Name="PART_MetroActiveDialogContainer"
                          Grid.Row="0"
                          Grid.RowSpan="2"
                          Grid.Column="0"
                          Grid.ColumnSpan="5"
                          Panel.ZIndex="5"
                          FocusVisualStyle="{x:Null}" />

                    <Border x:Name="PART_Border"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Background="{x:Null}"
                    BorderBrush="{TemplateBinding GlowBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    UseLayoutRounding="True" Grid.Row="1" Grid.ColumnSpan="5" />
                </Grid>
            </AdornerDecorator>


            <ResizeGrip x:Name="WindowResizeGrip"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        IsTabStop="False"
                        UseLayoutRounding="True"
                        Visibility="Collapsed" />
        </Grid>

        <ControlTemplate.Resources>
            <Storyboard x:Key="OverlayFastSemiFadeIn"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To=".7" />
            </Storyboard>
            <Storyboard x:Key="OverlayFastSemiFadeOut"
                        AccelerationRatio=".97"
                        BeginTime="0:0:0"
                        SpeedRatio="2.7"
                        Storyboard.TargetProperty="Opacity">
                <DoubleAnimation To="0.0" />
            </Storyboard>
        </ControlTemplate.Resources>

        <ControlTemplate.Triggers>
            <Trigger Property="ShowDialogsOverTitleBar" Value="False">
                <Setter TargetName="PART_MetroInactiveDialogsContainer" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_OverlayBox" Property="Grid.Row" Value="1" />
                <Setter TargetName="PART_MetroActiveDialogContainer" Property="Grid.Row" Value="1" />
            </Trigger>

            <Trigger Property="UseNoneWindowStyle" Value="True">
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <Trigger Property="ShowTitleBar" Value="False">
                <Setter TargetName="PART_WindowTitleThumb" Property="Grid.RowSpan" Value="2" />
                <Setter TargetName="PART_FlyoutModalDragMoveThumb" Property="Grid.RowSpan" Value="2" />
            </Trigger>
            <!--  handle active/inactive state  -->
            <Trigger Property="IsActive" Value="False">
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveGlowBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_WindowTitleBackground" Property="Background" Value="{Binding Path=NonActiveWindowTitleBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="False" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=NonActiveBorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActive" Value="True" />
                    <Condition Property="GlowBrush" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Border" Property="BorderBrush" Value="{Binding Path=BorderBrush, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <!--  no icon and no icon content template -> collapse the icon content control  -->
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Icon" Value="{x:Null}" />
                    <Condition Property="IconTemplate" Value="{x:Null}" />
                </MultiTrigger.Conditions>
                <Setter TargetName="PART_Icon" Property="MinWidth" Value="0" />
                <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip" />
                    <Condition Property="WindowState" Value="Normal" />
                </MultiTrigger.Conditions>
                <Setter TargetName="WindowResizeGrip" Property="Visibility" Value="Visible" />
            </MultiTrigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>
    <Style x:Key="DefaultMsgWindowStyle" TargetType="{x:Type metros:MetroWindow}" 
           BasedOn="{StaticResource DefaultMWindow}">
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="WindowTitleBrush" Value="{StaticResource Window.TitleBrush}"/>
        <Setter Property="Padding" Value="0,0,0,12"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="#3f92f0"/>
        <Setter Property="Template" Value="{StaticResource MsgWindowTemplateKey}"/>
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Margin="18 -1 0 0" Orientation="Horizontal" VerticalAlignment="Center">
                        <TextBlock VerticalAlignment="Center" FontSize="14" Foreground="White" TextTrimming="CharacterEllipsis" Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type metros:MetroWindow}},Path=Title}" 
                                   FontFamily="Microsoft YaHei UI"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <sys:Double x:Key="hoverHeight">24</sys:Double>
    <sys:Double x:Key="hoverWidth">24</sys:Double>
    <sys:Double x:Key="normalHeight">16</sys:Double>
    <sys:Double x:Key="normalWidth">16</sys:Double>

    <!--标题栏按钮样式-->
    <Style x:Key="commandButtonStyle"
       TargetType="{x:Type Button}">
        <Setter Property="Background" Value="Black"/>
        <Setter Property="Margin" Value="6,0,12,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid" Width="30" Background="Transparent">
                        <ContentPresenter x:Name="contentPresenter" Opacity="1"
                                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                      RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver"
                             Value="True">
                            <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value="1" />
                            <Setter TargetName="grid"
                                Property="Background"
                                Value="LightBlue" />
                            <Setter Property="Foreground"
                                    Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver"
                             Value="False">
                            <Setter TargetName="contentPresenter"
                                Property="Opacity"
                                Value="1" />
                        </Trigger>
                        <Trigger Property="IsPressed"
                             Value="True">
                            <Setter TargetName="grid"
                                Property="Background"
                                Value="#E04343" />
                        </Trigger>
                        <Trigger Property="IsEnabled"
                             Value="false">
                            <Setter Property="Foreground"
                                Value="#ADADAD" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--最小化按钮样式-->
    <Style x:Key="WindowMinButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource commandButtonStyle}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Grid>
                        <Image x:Name="hoverImg" Height="{StaticResource hoverHeight}" Width="{StaticResource hoverWidth}" Source="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Hover/CommandBtn.png" Visibility="Hidden" />
                        <Image Height="{StaticResource normalHeight}" Width="{StaticResource normalWidth}" Source="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Normal/BtnMin.png" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hoverImg" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--最大化按钮样式-->
    <Style x:Key="WindowMaxButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource commandButtonStyle}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Grid >
                        <Image x:Name="hoverImg" Visibility="Hidden" Height="{StaticResource hoverHeight}" Width="{StaticResource hoverWidth}"
                               Source="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Hover/CommandBtn.png"/>
                        <Image x:Name="normalImg" Height="{StaticResource normalHeight}" Width="{StaticResource normalWidth}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hoverImg" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type metros:MetroWindow}}}" Value="Normal">
                            <Setter TargetName="normalImg" Property="Source" Value="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Normal/BtnMax_Normal.png" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType={x:Type metros:MetroWindow}}}" Value="Maximized">
                            <Setter TargetName="normalImg" Property="Source" Value="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Normal/BtnMax_Maximumed.png" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--关闭按钮样式-->
    <Style x:Key="WindowCloseButtonStyle" TargetType="{x:Type Button}" BasedOn="{StaticResource commandButtonStyle}" >
        <Setter Property="Margin" Value="6,0,21,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}" >
                    <Grid>
                        <Image x:Name="hoverImg" Stretch="None" Height="{StaticResource hoverHeight}" RenderOptions.BitmapScalingMode="HighQuality" Width="{StaticResource hoverWidth}" Source="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Hover/BtnClose.png" Visibility="Hidden" />
                        <Image x:Name="normalImg" Stretch="None" Height="{StaticResource normalHeight}" RenderOptions.BitmapScalingMode="HighQuality"  Width="{StaticResource normalWidth}" Source="/Singularity.UI.Themes;component/Images/Shell/TitleBar/Normal/BtnClose.png" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="hoverImg" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="normalImg" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>