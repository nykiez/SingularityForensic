<controls:CorneredWindow x:Class="Singularity.UI.Info.Views.StartForensicWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
            xmlns:models="clr-namespace:Singularity.UI.Info.Models"
            xmlns:cvts="clr-namespace:Singularity.UI.Converters;assembly=Singularity.UI.Converters"
             xmlns:controls="clr-namespace:CDFCControls.Controls;assembly=CDFCControls"
            xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
            xmlns:commands="clr-namespace:CDFCUIContracts.Commands;assembly=CDFCUIContracts"
              Width="360" Height="450" WindowStartupLocation="CenterScreen" BorderThickness="1,0,1,1" ShowCloseButton="True"
             mc:Ignorable="d" ResizeMode="NoResize" WindowTitleBrush="{DynamicResource MessageBoxWindowTitleBrushKey}"
                         BorderBrush="{DynamicResource MessageBoxWindowBorderBrushKey}"  Title="{DynamicResource SelectItemsToAquire}"
             d:DesignHeight="300" d:DesignWidth="300">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <commands:EventToCommand PassEventArgsToCommand="True" Command="{Binding ClosingCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Singularity.UI.Themes;component/Button.xaml" />
                <ResourceDictionary Source="pack://application:,,,/Singularity.UI.Themes;component/TreeViewEx.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Singularity.UI.Themes;component/ProgressBar.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Singularity.UI.Themes;component/CheckBox.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <controls:TreeViewEx ItemsSource="{Binding CheckGroups}" 
                             Style="{StaticResource TreeViewExStyle}">
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem"  >
                    <Setter Property="Padding" Value="0,6"/>
                    <Setter Property="IsExpanded" Value="True"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Border x:Name="Bd" Grid.ColumnSpan="2" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                            Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
                                        <StackPanel Orientation="Horizontal" Margin="{Binding Level,Converter={x:Static cvts:LevelToMarginConverter.StaticInstance}}" >
                                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource TreeViewToggleButton}"/>
                                            <ContentPresenter x:Name="PART_Header" ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </StackPanel>
                                    </Border>
                                    <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="3" Grid.Column="0" Grid.Row="1"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsExpanded" Value="False">
                                        <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                    </Trigger>
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" TargetName="Bd" Value="#e4f0fe"/>
                                        <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsSelectionActive" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.ItemContainerStyle>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Resources>
                            <Style TargetType="TextBlock" >
                                <Setter Property="FontSize" Value="10"/>
                                <Setter Property="VerticalAlignment" Value="Center"/>
                                <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                            </Style>
                        </StackPanel.Resources>
                        <CheckBox IsChecked="{Binding IsChecked}" Margin="6,0" IsEnabled="{Binding IsEnabled,Mode=OneWay}" />
                        <TextBlock Text="{Binding Name}" Width="72"/>
                        <ContentControl Content="{Binding}">
                            <ContentControl.Resources>
                                <DataTemplate DataType="{x:Type models:CheckItemTreeItem}">
                                    <ProgressBar Value="{Binding Pro}" Width="120"/>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type models:CheckGroupTreeItem}"/>
                           </ContentControl.Resources>
                        </ContentControl>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <controls:TreeViewEx.Resources>
                <DataTemplate DataType="{x:Type models:CheckGroupTreeItem}">
                    
                </DataTemplate>
            </controls:TreeViewEx.Resources>
        </controls:TreeViewEx>
        <StackPanel Grid.Row="1" HorizontalAlignment="Center" Orientation="Horizontal">
            <Button Margin="6,0" Command="{Binding ConfirmCommand}">
                确定
            </Button>
            <Button Style="{DynamicResource DenyBtnStyle}" Command="{Binding CancelCommand}" Margin="6,0" >
                取消
            </Button>
        </StackPanel>
    </Grid>
</controls:CorneredWindow>
