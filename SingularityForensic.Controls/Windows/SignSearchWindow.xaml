<controls:CorneredWindow x:Class="SingularityForensic.Controls.Windows.SignSearchWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:controls="clr-namespace:CDFCControls.Controls;assembly=CDFCControls"
        xmlns:metros="http://metro.mahapps.com/winfx/xaml/controls"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SingularityForensic.Controls.Windows"
        WindowStartupLocation="CenterScreen" KeyDown="CorneredWindow_KeyDown"
        mc:Ignorable="d" ResizeMode="NoResize" SizeToContent="Height"
        Title="{StaticResource SignSearch}"  Width="600" Style="{DynamicResource MsgWindowStyle}">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/SingularityForensic.Contracts;component/Themes/CorneredWindow.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
                <Setter Property="Foreground" Value="{DynamicResource LabelTextBrush}"/>
                <Setter Property="Background" Value="{DynamicResource WhiteBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="metros:ControlsHelper.FocusBorderBrush" Value="{DynamicResource HighlightBrush}"/>
                <Setter Property="metros:ControlsHelper.MouseOverBorderBrush" Value="{DynamicResource CheckBoxMouseOverBrush}"/>
                <Setter Property="FontFamily" Value="{DynamicResource ContentFontFamily}"/>
                <Setter Property="FontSize" Value="{DynamicResource ContentFontSize}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="6,0,0,0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition x:Name="LeftCol" Width="*"/>
                                    <ColumnDefinition x:Name="RightCol" Width="18"/>
                                </Grid.ColumnDefinitions>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="Disabled">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="0.55" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="contentPresenter"/>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="disabled"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="CheckStates">
                                        <VisualState x:Name="Checked">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="checkBox"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unchecked"/>
                                        <VisualState x:Name="Indeterminate">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="IndeterminateCheck"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Grid x:Name="PART_CHECKBOX" Grid.Column="1">
                                    <Rectangle Fill="{DynamicResource TransparentWhiteBrush}" Margin="-6,0"/>
                                    <Border x:Name="normal" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Height="18" Width="18"/>
                                    <Path x:Name="checkBox" Data="M1145.60717773438,430C1145.60717773438,430 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1141.44995117188,435.077270507813 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1139.23217773438,433.099975585938 1138,434.553833007813 1138,434.553833007813 1138,434.553833007813 1141.48217773438,438 1141.48217773438,438 1141.48217773438,438 1141.96875,437.9375 1141.96875,437.9375 1141.96875,437.9375 1147,431.34619140625 1147,431.34619140625 1147,431.34619140625 1145.60717773438,430 1145.60717773438,430z" Fill="{DynamicResource HighlightBrush}" Height="10" Opacity="0" Stretch="Fill" UseLayoutRounding="False" Width="12"/>
                                    <Rectangle x:Name="IndeterminateCheck" Fill="{DynamicResource GrayBrush3}" Height="3" Opacity="0" Width="8"/>
                                    <Border x:Name="disabled" BorderThickness="{TemplateBinding BorderThickness}" Background="{DynamicResource SemiTransparentWhiteBrush}" Height="18" Opacity="0" Width="18"/>
                                </Grid>
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="normal" Value="{Binding (metros:ControlsHelper.MouseOverBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="BorderBrush" TargetName="normal" Value="{DynamicResource HighlightBrush}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="normal" Value="{Binding (metros:ControlsHelper.FocusBorderBrush), RelativeSource={RelativeSource TemplatedParent}}"/>
                                </Trigger>
                                <Trigger Property="FlowDirection" Value="RightToLeft">
                                    <Setter Property="LayoutTransform" TargetName="checkBox">
                                        <Setter.Value>
                                            <ScaleTransform ScaleX="-1"/>
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="metros:ToggleButtonHelper.ContentDirection" Value="RightToLeft">
                                    <Setter Property="Padding" Value="0,0,6,0"/>
                                    <Setter Property="Width" TargetName="LeftCol" Value="*"/>
                                    <Setter Property="Grid.Column" TargetName="PART_CHECKBOX" Value="1"/>
                                    <Setter Property="Width" TargetName="RightCol" Value="18"/>
                                    <Setter Property="Grid.Column" TargetName="contentPresenter" Value="0"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="TextBlock" x:Key="ErrorTxb">
                <Setter Property="Foreground" Value="Red"/>
            </Style>
        </ResourceDictionary>
       
    </Window.Resources>
    
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="*" />
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.Resources>
            <Style TargetType="TextBlock">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="TextBox">
                <Setter Property="Margin" Value="6,3"/>
            </Style>
        </Grid.Resources>
        
        <TextBlock TextAlignment="Right" VerticalAlignment="Center"><Run Text="{StaticResource SignHead}"/>:</TextBlock>
        <TextBox x:Name="txbHex"  Grid.Column="1"/>
        <TextBlock x:Name="txbSignError" Style="{StaticResource ErrorTxb}" Grid.Column="2"/>
        
        <TextBlock TextAlignment="Right" Grid.Row="1"><Run Text="{StaticResource SectorSize}"/>:</TextBlock>
        <TextBox x:Name="txbSecSize" Grid.Column="1" Grid.Row="1" />
        <StackPanel Orientation="Horizontal" Grid.Row="1" Grid.Column="2">
            <CheckBox x:Name="chbSecAlign" IsChecked="True" Grid.Row="1" Grid.Column="2" Content="{DynamicResource AlignToSector}" />
            <TextBlock x:Name="txbSecSizeError" Style="{StaticResource ErrorTxb}" />
        </StackPanel>
        
        
        <TextBlock  Grid.Row="2" TextAlignment="Right"><Run Text="{StaticResource SecStartSpace}"/>:</TextBlock>
        <TextBox x:Name="txbStartLBA" Grid.Row="2" Grid.Column="1"/>
        <TextBlock x:Name="txbStartLBAError" Style="{StaticResource ErrorTxb}" Grid.Column="2" Grid.Row="2" />
        <!--
        <TextBlock  Grid.Row="3" TextAlignment="Right"><Run Text="{StaticResource EndLBA}"/>:</TextBlock>
        <TextBox x:Name="txbEndLBA" Grid.Row="3" Grid.Column="1"/>-->
        <TextBlock HorizontalAlignment="Right" Grid.Row="4"><Run Text="{StaticResource FileExtension}" />:</TextBlock>
        <TextBox Grid.Row="4" Grid.Column="1" x:Name="txbExt"></TextBox>

        <TextBlock HorizontalAlignment="Right" Grid.Row="5"><Run Text="{StaticResource MaxSize}" />:</TextBlock>
        <TextBox Grid.Row="5" Grid.Column="1" x:Name="txbMaxSize"></TextBox>
        <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="5">
            <TextBlock >MB</TextBlock>
            <TextBlock x:Name="txbMaxSizeError" Style="{StaticResource ErrorTxb}"></TextBlock>
        </StackPanel>
        
        
        <StackPanel Grid.Row="6" Grid.ColumnSpan="3" Margin="0,3">
            <StackPanel HorizontalAlignment="Center" Orientation="Horizontal">
                <Button Margin="12,0" Content="{StaticResource Confirm}" x:Name="btnConfirm" Click="btnConfirm_Click" />
                <Button Margin="12,0" Style="{DynamicResource DenyBtnStyle}" Content="{StaticResource Cancel}"  x:Name="btnCancel" Click="btnCancel_Click"/>
            </StackPanel>
        </StackPanel>
    </Grid>
</controls:CorneredWindow>
