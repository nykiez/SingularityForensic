<UserControl x:Class="SingularityForensic.MainMenu.Views.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
             xmlns:prism="http://prismlibrary.com/"
             mc:Ignorable="d" prism:ViewModelLocator.AutoWireViewModel="True"
             d:DesignHeight="300" d:DesignWidth="1440">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/SingularityForensic.Contracts;component/Themes/ComboBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/SingularityForensic.Contracts;component/Themes/TextBox.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/SingularityForensic.Contracts;component/Themes/TabControl.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="ToolBarBackground" Color="#f5f6f8"/>
            <SolidColorBrush Color="#bfbfbf" x:Key="SubMenuItem.Saparator"/>
            <ControlTemplate x:Key="SubMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
                <Grid SnapsToDevicePixels="True">
                    <Rectangle x:Name="Bg" Fill="{TemplateBinding Background}" />
                    <DockPanel>
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" Margin="4,0,6,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                        <Path x:Name="GlyphPanel" Data="M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z" Fill="{DynamicResource CheckmarkFill}" FlowDirection="LeftToRight" HorizontalAlignment="Center" Margin="8,0,0,0" Visibility="Collapsed" VerticalAlignment="Center"/>
                        <Border Margin="16,0" BorderBrush="{StaticResource SubMenuItem.Saparator}" BorderThickness="0,0,0,1">
                            <DockPanel>
                                <ContentPresenter DockPanel.Dock="Left"  ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                <ContentPresenter Content="{TemplateBinding InputGestureText}" VerticalAlignment="Center" DockPanel.Dock="Right"/>
                                <Border/>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                    <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" VerticalOffset="-1">
                        <Grid>
                            <Rectangle x:Name="LayoutRoot" Fill="{TemplateBinding Background}"/>
                            <ContentControl x:Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                <ScrollViewer x:Name="SubMenuScrollViewer" CanContentScroll="True" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" Margin="0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                </ScrollViewer>
                            </ContentControl>
                        </Grid>
                    </Popup>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsSuspendingPopupAnimation" Value="True">
                        <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                    </Trigger>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="True">
                        <Setter Property="Effect" TargetName="LayoutRoot">
                            <Setter.Value>
                                <DropShadowEffect BlurRadius="4" Color="{DynamicResource MenuShadowColor}" Direction="315" Opacity="0.3" ShadowDepth="2"/>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Margin" TargetName="LayoutRoot" Value="0,0,6,6"/>
                        <Setter Property="Margin" TargetName="SubMenuBorder" Value="0,0,6,6"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Stroke" TargetName="Bg" Value="{DynamicResource TopMenuItemSelectionStroke}"/>
                    </Trigger>
                    <Trigger Property="IsKeyboardFocused" Value="True">
                        <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}"/>
                        <Setter Property="Stroke" TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}"/>
                    </Trigger>
                    <Trigger Property="IsSubmenuOpen" Value="True">
                        <Setter Property="Fill" TargetName="Bg" Value="{DynamicResource TopMenuItemPressedFill}"/>
                        <Setter Property="Stroke" TargetName="Bg" Value="{DynamicResource TopMenuItemPressedStroke}"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Foreground" Value="{DynamicResource DisabledMenuItemForeground}"/>
                        <Setter Property="Fill" TargetName="GlyphPanel" Value="{DynamicResource DisabledMenuItemGlyphPanel}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="MenuItem" x:Key="SubMenuItemStyle">
                <Setter Property="MinWidth" Value="150"/>
                <Setter Property="Padding" Value="0,6"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template" Value="{StaticResource SubMenuItemControlTemplate}"/>
            </Style>
            <SolidColorBrush x:Key="MainMenuItem.Popup.Back" Color="#cccccc"/>
            <ImageBrush x:Key="MainMenuitem.Background.Active" ImageSource="pack://application:,,,/SingularityForensic;component/Images/Shell/MenuItem_Active.png" Stretch="Fill"  />
            <ControlTemplate x:Key="ShellMenuItemControlTemplate" TargetType="{x:Type MenuItem}">
                <Border x:Name="templateRoot" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                    <Grid  >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.ColumnSpan="3" x:Name="MenuItemBackground" Visibility="Hidden" Source="pack://application:,,,/SingularityForensic;component/Images/Shell/MenuItem_Active.png" Stretch="Fill"  />
                        <ContentPresenter x:Name="Icon" Content="{TemplateBinding Icon}" ContentSource="Icon" HorizontalAlignment="Center" Height="16" Margin="3" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" Width="16"/>
                        <Path x:Name="GlyphPanel" Data="F1M10,1.2L4.7,9.1 4.5,9.1 0,5.2 1.3,3.5 4.3,6.1 8.3,0 10,1.2z" Fill="#FF212121" FlowDirection="LeftToRight" Margin="3" Visibility="Collapsed" VerticalAlignment="Center"/>
                        <ContentPresenter VerticalAlignment="Center" TextBlock.TextAlignment="Center" Grid.ColumnSpan="3"  ContentTemplate="{TemplateBinding HeaderTemplate}" Content="{TemplateBinding Header}" ContentStringFormat="{TemplateBinding HeaderStringFormat}" ContentSource="Header"
                                      RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        <Popup x:Name="PART_Popup" AllowsTransparency="True" Focusable="False" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                           PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom" >
                            <Border CornerRadius="3" Background="{StaticResource MainMenuItem.Popup.Back}">
                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Cycle" Grid.IsSharedSizeScope="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                            KeyboardNavigation.TabNavigation="Cycle"/>
                            </Border>
                            <!--<ContentControl x:Name="SubMenuBorder" IsTabStop="False" Template="{DynamicResource {ComponentResourceKey ResourceId=SubmenuContent, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                            
                        </ContentControl>-->
                        </Popup>
                    </Grid>
                </Border>
                <ControlTemplate.Triggers>
                    <Trigger Property="Icon" Value="{x:Null}">
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Visibility" TargetName="GlyphPanel" Value="Visible"/>
                        <Setter Property="Visibility" TargetName="Icon" Value="Collapsed"/>
                    </Trigger>
                    <Trigger Property="IsHighlighted" Value="True">
                        <Setter Property="Visibility" TargetName="MenuItemBackground" Value="Visible"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="TextElement.Foreground" TargetName="templateRoot" Value="#FF707070"/>
                        <Setter Property="Fill" TargetName="GlyphPanel" Value="#FF707070"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsHighlighted" Value="True"/>
                            <Condition Property="IsEnabled" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="Background" TargetName="templateRoot" Value="#0A000000"/>
                        <Setter Property="BorderBrush" TargetName="templateRoot" Value="#21000000"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="MenuItem" x:Key="MainMenuItemStyle">
                <Setter Property="BorderThickness" Value="0,0,1,0"/>
                <Setter Property="BorderBrush" Value="Gainsboro"/>
                <Setter Property="FontSize" Value="15"/>
                <Setter Property="FontFamily" Value="Microsoft YaHei"/>
                <Setter Property="Template" Value="{DynamicResource ShellMenuItemControlTemplate}"/>
                <Setter Property="ItemContainerStyle" Value="{StaticResource SubMenuItemStyle}"/>
            </Style>
            
            <ImageBrush x:Key="BtnCollapse.Normal" Stretch="None"   ImageSource="/SingularityForensic;component/Images/Shell/ToolBar/Btn_Collapse.png"  />
            <ImageBrush x:Key="BtnCollapse.Hover"  Stretch="None"   ImageSource="/SingularityForensic;component/Images/Shell/ToolBar/Btn_Collapse_Hover.png" />
            <ImageBrush x:Key="BtnExpand.Normal"   Stretch="None"   ImageSource="/SingularityForensic;component/Images/Shell/ToolBar/Btn_Expand.png" />
            <ImageBrush x:Key="BtnExpand.Hover"    Stretch="None"   ImageSource="/SingularityForensic;component/Images/Shell/ToolBar/Btn_Expand_Hover.png" />
            <Style TargetType="Button" BasedOn="{StaticResource TransparentButton}" x:Key="CollapseButton">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="#20808080"/>
                <Setter Property="Height" Value="7"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate  TargetType="{x:Type Button}">
                            <Border x:Name="border" CornerRadius="0,0,3,3" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=ToolBar,Path=IsCollapsed,FallbackValue=False}" Value="False"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource BtnCollapse.Normal}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=ToolBar,Path=IsCollapsed,FallbackValue=False}" Value="False"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource BtnCollapse.Hover}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=ToolBar,Path=IsCollapsed,FallbackValue=False}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource BtnExpand.Normal}"/>
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding ElementName=ToolBar,Path=IsCollapsed,FallbackValue=False}" Value="True"/>
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self},Path=IsMouseOver}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource BtnExpand.Hover}"/>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <ImageBrush x:Key="ToolBarBtnHover" Stretch="Fill" ImageSource="/SingularityForensic;component/Images/ToolBarButton_Hover.png"  />
            <ImageBrush x:Key="ToolBarBtnClick" Stretch="Fill" ImageSource="/SingularityForensic;component/Images/ToolBarButton_Click.png"  />
            <Style TargetType="{x:Type telerik:RadMenuItem}" x:Key="BasicMenuItem"  BasedOn="{StaticResource  {x:Type telerik:RadMenuItem}}">
                <Setter Property="Header" Value="{Binding Text}" />
                <Setter Property="ItemsSource" Value="{Binding Children}"/>
                <Setter Property="Command" Value="{Binding Command}"/>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <telerik:RadMenu ItemsSource="{Binding MenuGroups}" BorderThickness="0">
        <telerik:RadMenu.ItemContainerStyle>
            <Style TargetType="{x:Type telerik:RadMenuItem}" BasedOn="{StaticResource BasicMenuItem}">
                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type telerik:RadMenuItem}" BasedOn="{StaticResource BasicMenuItem}">
                            <!--<Setter Property="Icon" >
                                <Setter.Value>
                                    <Image Source="{Binding IconSource}"/>
                                </Setter.Value>
                            </Setter>-->
                        </Style>
                    </Setter.Value>
                </Setter>
            </Style>
        </telerik:RadMenu.ItemContainerStyle>
    </telerik:RadMenu>
    
</UserControl>
